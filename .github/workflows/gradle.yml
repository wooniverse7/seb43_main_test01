# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# 권한 읽기
permissions:
  contents: read
  
# 환경 변수를 이용해 S3 버킷 이름 지정
env:
  S3_BUCKET_NAME: codejejus-deploy

# GitHubActions 작업
jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./server/inddybuddy
    steps:
    - uses: actions/checkout@v3
    
    # JDK 설치
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'        
        
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    # build 수행
    - name: Build with Gradle
      run: ./gradlew build

    # build 후 프로젝트를 압축한다
    - name: Make zip file
      run: zip -r ./codejejus-deploy.zip .
      shell: bash

    # Access Key와 Secret Access Key를 통해 권한 확인
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2

    # 압출파일 S3에 전송
    - name: Upload to S3
      run: aws s3 cp --region ap-northeast-2 ./codejejus.zip s3://$S3_BUCKET_NAME/codejejus-deploy.zip
